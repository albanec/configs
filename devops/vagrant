# инициализация
vagrant init

## добавить бокс
vagrant box add hashicorp/precise64
    # в Vargantfile
    Vagrant.configure("2") do |config|
        config.vm.box = "hashicorp/precise64"
        config.vm.box_version = "1.1.0"
        config.vm.box_url = "http://files.vagrantup.com/precise64.box"
    end

# репозиторий боксов
https://app.vagrantup.com/boxes/search

# старт
vagrant up

## инструкции для провиженинга
Vagrant.configure("2") do |config|
  config.vm.box = "hashicorp/precise64"
  config.vm.provision :shell, path: "bootstrap.sh"
  config.vm.provision "file", source: "~/.gitconfig", destination: ".gitconfig"
  # использовать ansible
  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "playbook.yml"
  end
  # работа с docker
  config.vm.provision "docker" do |d|
    d.build_image "/vagrant/app"
    d.run "rabbitmq", image: "rabbitmq"
    d.run "db-2", image: "user/mysql"
  end
end
    # если тачка уже запущена
    vagrant reload --provision

## проброс порта 
Vagrant.configure("2") do |config|
  config.vm.box = "hashicorp/precise64"
  config.vm.provision :shell, path: "bootstrap.sh"
  config.vm.network :forwarded_port, guest: 80, host: 4567
end

## multimachine 
Vagrant.configure("2") do |config|
  config.vm.provision "shell", inline: "echo Hello"

  config.vm.define "web" do |web|
    web.vm.box = "apache"
  end

  config.vm.define "db" do |db|
    db.vm.box = "mysql"
  end
end
## цикл для развертывания нескольких машин
(1..3).each do |i|
  config.vm.define "node-#{i}" do |node|
    node.vm.provision "shell",
      inline: "echo hello from node #{i}"
  end
end

## выбор бэкенда
config.vm.provider "vmware_fusion"
config.vm.provider "virtualbox"

## проброс папок
config.vm.synced_folder "src/", "/srv/website"
    # задать разрешения
    owner: "root", group: "root"


# команды 
vagrant suspend
vagrant halt
vagrant destroy