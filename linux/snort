#1 Подготовка 
	
	#отключение кештрования трафика сетевыми картами
		sudo apt-get install ethtool
		sudo ethtool -K eth0 gro off
		sudo ethtool -K eth0 lro off
	#необходимые для сборки пакеты
		#для Snort
		sudo apt-get install build-essential
		sudo apt-get install libpcap-dev libpcre3-dev libdumbnet-dev libdnet libdnet-dev
		sudo apt-get install zlib1g-dev libgcrypt11-dev
		#для DAQ
		sudo apt-get install bison flex
		sudo apt-get install libnetfilter-queue-dev
		sudo apt-get install libnetfilter-queue1 libnfnetlink-dev libnfnetlink0
	#исходники
		mkdir ~/snort_src
		cd ~/snort_src
		wget https://www.snort.org/downloads/snort/daq-2.0.4.tar.gz
		wget https://www.snort.org/downloads/snort/snort-2.9.7.0.tar.gz

#2 Установка

	#установка daq
	tar -xvzf daq-2.0.4.tar.gz
	./configure
	checkinstall 
	#установка snort
	tar -xvzf snort-2.9.7.0.tar.gz
	cd snort-2.9.7.0
	./configure --enable-sourcefire
	checkinstall
	ldconfig
	#ссылка на snort
	ln -s /usr/local/bin/snort /usr/sbin/snort
	# проверка версии
	snort -V

#3 Настройка прав и структуры snort

	#для того, чтобы не запускать snort под root'ом, создаем под него пользователя
	sudo groupadd snort
	sudo useradd snort -r -s /sbin/nologin -c SNORT_IDS -g snort

	#создаем необходимые для работы папки и файлы
	sudo mkdir /etc/snort
	sudo mkdir /etc/snort/rules
	sudo mkdir /etc/snort/preproc_rules
	sudo mkdir /var/log/snort
	sudo mkdir /usr/local/lib/snort_dynamicrules
	sudo touch /etc/snort/rules/white_list.rules 
	sudo touch /etc/snort/rules/black_list.rules 
	sudo touch /etc/snort/rules/local.rules
	#назначаем для них права
	sudo chmod -R 5775 /etc/snort
	sudo chmod -R 5775 /var/log/snort
	sudo chmod -R 5775 /usr/local/lib/snort_dynamicrules
	#назначаем владельца - пользователя snort
	sudo chown -R snort:snort /etc/snort
	sudo chown -R snort:snort /var/log/snort
	sudo chown -R snort:snort /usr/local/lib/snort_dynamicrules

	#копируем несколько нужных .conf и .map файлов из основной папки в /etc/snort
	cd ~/snort_src/snort-2.9.7.0/
	cp etc/*.conf* /etc/snort
	cp etc/*.map /etc/snort
	#проверка структуры
	tree /etc/snort
	
	#в итоге должна получиться следующая структура (общая)
	#бинарный файл - /usr/local/bin/snort (перелинкован с /usr/sbin/snort)
	#конфигурационный файл - /etc/snort/snort.conf
	#папка для логов - /var/log/snort
	#папки для правил - /etc/snort/rules и /usr/local/lib/snort_dynamicrules
	
#4 редактирование конфига snort'а
	
	#комментируем ненужные строки путей к правилам (pulledpork все равно складывает их все в один файл)
	sudo sed -i 's/include \$RULE\_PATH/#include \$RULE\_PATH/' /etc/snort/snort.conf
	nano /etc/snort/snort.conf
	
	#дальше редактируем
		#строка 45
		ipvar HOME_NET 10.8.0.0/24
		ipvar EXTERNAL_NET !$HOME_NET
		#строка 104
		var RULE_PATH /etc/snort/rules
		var SO_RULE_PATH /etc/snort/so_rules
		var PREPROC_RULE_PATH /etc/snort/preproc_rules
		var WHITE_LIST_PATH /etc/snort/rules
		var BLACK_LIST_PATH /etc/snort/rules
		#строка 541, раскомментить
		include $RULE_PATH/local.rules
	
	#тест конфига
	sudo snort -T -c /etc/snort/snort.conf

	#немного ключей для snort'a
		-A console #вывод сообщений в консоль
		-q #"тихий" режим
		-u #задает группу
		-u #задает хозяина процесса
		-c /etc/snort/snort.conf #конфиг
		-i eth1 #прослушиваемый интерфейс (для IDS (NIDS) режима)
		-v #вывод на экран L3/L4 заголовков
		-d #вывод на экран data пакетов
		-vde #режим снифера - вывод всего



#5 Pulled Pork
	
	#докачиваем
	apt-get install libcrypt-ssleay-perl liblwp-protocol-https-perl liblwp-useragent-determined-perl
	
	#скачиваем и ставим
	cd ~/snort_src
	wget https://pulledpork.googlecode.com/files/pulledpork-0.7.0.tar.gz
	tar -xvzf pulledpork-0.7.0.tar.gz
	#копируем скрипт
	sudo cp pulledpork.pl /usr/local/bin
	chmod +x /usr/local/bin/pulledpork.pl
	#перелинковка
	ln -s /usr/local/bin/pulledpork.pl /usr/sbin/pulledpork.pl
	
	#копируем конф файлы pork'а (из его папки) в папку с конфигами snort
	cd /etc/snort/pulledpork-0.7.0
	sudo cp etc/*.conf /etc/snort
	#создаем необходимые для работы pork'а папки и файлы
	sudo mkdir /tmp/pulledpork_tmp
	sudo mkdir /etc/snort/rules/iplists
	sudo touch /etc/snort/rules/iplists/default.blacklist
	#проверка работы
	/usr/local/bin/pulledpork.pl -V
	#редактируем конфиг (в "доках" - pulledpork.conf)
	nano pulledpork.conf

	#запускаем pulledpork
	sudo pulledpork.pl -c /etc/snort/pulledpork.conf -l
	
	#после закачки добавляем в конфиг snort'a
	include $RULE_PATH/snort.rules

	#добавляем pulledpork в chronetab
	sudo crontab -e
		#добавляем строку
		01 04 * * * /usr/local/bin/pulledpork.pl -c /etc/snort/pulledpork.conf -l -P

	#ключи для pulledpork:
	-l #подробный лог	
	-I #уровень фильтров
	-P #перезапуск с учетом новых политик
	-vv #debug режим
	
#6 установка Barnyard2
	apt-get install -y mysql-server libmysqlclient-dev mysql-client autoconf 
	apt-get install -y libtool libpcap-dev libmysqld-dev libprelude-dev 
	apt-get install libdumbnet-dev
	ln -s /usr/include/dumbnet.h /usr/include/dnet.h
	
	#добавить в snort.conf, после строки 516
		#output unified2: filename merged.log, limit 128, nostamp, mpls_event_types, vlan event types}
	output unified2: filename snort.u2, limit 128

	#качаем и распаковываем
	cd ~/snort_src
	wget https://github.com/firnsy/barnyard2/archive/master.tar.gz -O barnyard2-2-1.13.tar.gz
	tar zxvf barnyard2-2-1.13.tar.gz
	cd barnyard2-master

	#собираем
	autoreconf -fvi -I ./m4
	./configure --with-mysql --with-mysql-libraries=/usr/lib/x86_64-linux-gnu
	sudo checkinstall

	# копируем/добавляем нужное
	sudo cp etc/barnyard2.conf /etc/snort
	sudo mkdir /var/log/barnyard2
	sudo chown snort:snort /var/log/barnyard2
	chmod -R 5775 /var/log/barnyard2/
	sudo touch /var/log/snort/barnyard2.waldo
	sudo chown snort:snort /var/log/snort/barnyard2.waldo
	sudo touch /etc/snort/sid-msg.map
		-u snort #владелец процесса
	sudo chown snort:snort /etc/snort/sid-msg.map

	#создаем БД для snort
	echo "create database snort;" | mysql -u root -p
	mysql -u root -p -D snort < /home/evgeni/snort_src/barnyard2-master/schemas/create_mysql
	echo "grant create, insert, select, delete, update on snort.* to snort@localhost identified by 'MYSQLSNORTPASSWORD'" | mysql -u root -p

	#если используем snorby
	echo "create database snorby;" | mysql -u root -p
	echo "grant all on snorby.* to snorby@localhost identified by 'MYSQLSNORTPASSWORD'" | mysql -u root -p
	echo "grant all on snorby.* to barnyard2@localhost identified by 'MYSQLSNORTPASSWORD'" | mysql -u root -p


	#подключаем barnyard2 к созданной базе
	nano barnyard2.conf
		#в нем добавляем в конце файла
		output database: log, mysql, user=snort password=MYSQLSNORTPASSWORD dbname=snort host=localhost
	#т.к. пароль внутри конфига лежит в чистом виде, защищаем его от чтения
	sudo chmod o-r /etc/snort/barnyard2.conf

	#тестируем работу решения
		#прописываем тестовое правило в local.conf
			nano /etc/snort/rules/local.rules
			#в файл пишем
			alert icmp any any -> $HOME_NET any (msg:"ICMP test"; sid:10000001; rev:001;)
	#запускаем snort
	sudo snort -u snort -g snort -c /etc/snort/snort.conf -i eth1 
		#ping'уем адрес сервера, после отключаем snort и проверяем /var/log/snort на наличие бинарных логов
	#теперь надо запустить barnyard2 и выгрузить их в ДБ
		#ключи для barnyard2:
		-c /etc/snort/barnyard2.conf #путь к конфигу
		-d /var/log/snort #путь к бинарным логам
		-f snort.u2 #имя файла с бинарным логом
		-w /var/log/snort/barnyard2.waldo #описания
		-g snort #группа владельца
	sudo barnyard2 -c /etc/snort/barnyard2.conf -d /var/log/snort -f snort.u2 -w /var/log/snort/barnyard2.waldo -g snort -u snort
	
	mysql -u snort -p -D snort -e "select count(*) from event"

#7. Установка Snorby
	
	#докачиваем
	sudo apt-get install apache2 git imagemagick wkhtmltopdf ruby1.9.3 \
					libyaml-dev libxml2-dev libxslt1-dev openssl libssl-dev libreadline6-dev
 	#update ruby
 	sudo gem install rails
	sudo gem update

	#качаем&ставим
	git clone http://github.com/Snorby/snorby.git
	cd snorby && bundle install

	#редактировать конфиг 
	cd config 
	nano database.yml
	nano snorby_config.yml

	#собрать под конфиги и базу
	bundle exec rake snorby:setup
	
	#запуск на определенном интерфейсе
	bundle exec rails server -b 192.168.56.2 -e production

	#исправление ошибки с дашбордами
	mysql -u root -p
		use snorby;
		truncate table caches;
		exit
	#работа в консоли
	cd ./snorby/scripts/
	rails c
		#перезапустить worker процессы внутри snorby 
		Snorby::Worker.stop
		Snorby:Worker.start
		#редактирование бызы пользователей 
		u = User.find_by_email("foo@bar.com")
		u.password="NewUnencryptedPassword123"
		u.password_confirmation="NewUnencryptedPassword123"
	u.save

	#обнуление счетчиков
	mysql -u root -p	use snorby;
	truncate table caches;
	exit

#8. Режим IPS
	
	#работает с помощью DAQ
	#в зависимости от задачи, можно реализовать по-разному:
		#режим работы DAQ
		--daq-mode <mode>
			<mode> = read-file | passive | inline
		#тип DAQ
		--daq <type>
			<type> = pcap | afpacket | nfq
			#pcap - дефолтный тип DAQ для snort
			snort --daq pcap --daq-mode passive
			#afpacket - между двумя bridge интерфейсами
			snort --daq afpacket -i eth0:eth1
			#NFQ (NetFilter Queue)
			snort -Q --daq nfq --daq-var queue=0
				#через iptables перенаправить трафик на нужную очередь
				-j NFQUEUE --queue-num 2
			#inline - с порта на порт
			#pcap - дефолтный DAQ
	
	#проверка работоспособности DAQ
	snort --daq-dir /usr/local/lib/daq --daq-list
	
	#настройка snort'а в inline режим
	#внутри snort.conf 
		#раскомментить все по normalize preprocessor'ам
		#подключаем DAQ
		config daq_dir: /usr/local/lib/daq
		#включаем нужный DAQ режим
		config daq_mode: inline

	#модификация действий по правилам 
	#редактируем правила
	sudo nano /etc/snort/dropsid.conf
		#в нем добавить регулярку
		#регулярка для connectivity mode 
		pcre:connectivity-ips\s*drop
		#регулярка для balanced mode 
		pcre:balanced-ips\s*drop
		#регулярка для security mode 
		pcre:security-ips\s*drop
	#перезапуск pulledpork'a
	sudo pulledpork.pl -c /etc/snort/pulledpork.conf -l  -P
		
	#для нашего случая прописать в IPTABLES
	iptables -t mangle -A FORWARD -j NFQUEUE --queue-num 1
	#запуск snort'a в DAQ очередь
	sudo snort -Q --daq nfq --daq-var queue=1 -u snort -g snort -c /etc/snort/snort.conf 

sudo snort -D -Q --daq nfq --daq-var queue=1 -u snort -g snort -c /etc/snort/snort.conf 

sudo barnyard2 -D -c /etc/snort/barnyard2.conf -d /var/log/snort -f snort.u2 -w /var/log/snort/barnyard2.waldo -g root -u root
cd /home/maksimov/snort_src/snorby/config 
bundle exec rails server -b 10.30.1.214 -e production -d